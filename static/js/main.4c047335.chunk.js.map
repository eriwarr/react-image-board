{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ImageForm","props","state","url","caption","handleInput","bind","handleAddImage","cancelInput","event","this","setState","target","name","value","preventDefault","addPhoto","onSubmit","onReset","type","placeholder","onChange","Component","ImageList","urls","images","map","image","src","alt","ImageBoard","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAGMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,IAAK,GACLC,QAAS,IAEb,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBARA,E,+CAWnB,SAAYG,GACVC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,yBAGpD,SAAYL,GACVC,KAAKC,SAAU,CAAER,IAAK,GAAIC,QAAS,O,4BAGrC,SAAeK,GACbA,EAAMM,iBACNL,KAAKT,MAAMe,SAAS,CAClBb,IAAKO,KAAKR,MAAMC,IAChBC,QAASM,KAAKR,MAAME,UAEtBM,KAAKC,SAAU,CAAER,IAAK,GAAIC,QAAS,O,oBAKrC,WAEE,OACE,uBAAMa,SAAUP,KAAKH,eAAgBW,QAASR,KAAKF,YAAnD,UACE,uBAAOW,KAAK,OAAON,KAAK,MAAMO,YAAY,YAAYN,MAAOJ,KAAKR,MAAMC,IAAKkB,SAAUX,KAAKL,cAC5F,uBAAOc,KAAK,OAAON,KAAK,UAAUO,YAAY,gBAAgBN,MAAOJ,KAAKR,MAAME,QAASiB,SAAUX,KAAKL,cACxG,wBAAQc,KAAK,QAAb,oBACA,wBAAQA,KAAK,SAAb,8B,GAtCgBG,aA6CxB,SAASC,EAAUtB,GACf,IAAMuB,EAAOvB,EAAMwB,OAAOC,KAAI,SAACC,GAAD,OAC3B,6BACC,gCACA,qBAAKC,IAAKD,EAAMxB,IAAK0B,IAAI,iBACzB,4BAAIF,EAAMvB,cAHFuB,EAAMxB,QASpB,OACI,6BAAKqB,I,IAiCIM,E,kDA1Bb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXuB,OAAQ,IAEV,EAAKT,SAAW,EAAKA,SAASV,KAAd,gBALC,E,4CAQrB,SAASqB,GACT,IAAMF,EAAM,YAAQf,KAAKR,MAAMuB,QAC/BA,EAAOM,KAAKJ,GACZjB,KAAKC,SAAU,CAAEc,a,oBAIf,WAEE,OACE,gCACE,cAAC,EAAD,CAAWT,SAAUN,KAAKM,WAC1B,cAACO,EAAD,CAAWE,OAAQf,KAAKR,MAAMuB,gB,GAtBbH,aCrDVU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c047335.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass ImageForm extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      caption: '',\n    }\n  this.handleInput = this.handleInput.bind(this);\n  this.handleAddImage = this.handleAddImage.bind(this);\n  this.cancelInput = this.cancelInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  cancelInput(event) {\n    this.setState( { url: '', caption: '' });\n  }\n\n  handleAddImage(event) {\n    event.preventDefault();\n    this.props.addPhoto({\n      url: this.state.url,\n      caption: this.state.caption,\n    });\n    this.setState( { url: '', caption: '' });\n\n  }\n\n\n  render() {\n\n    return(\n      <form onSubmit={this.handleAddImage} onReset={this.cancelInput}>\n        <input type=\"text\" name=\"url\" placeholder=\"Image URL\" value={this.state.url} onChange={this.handleInput}/>\n        <input type=\"text\" name=\"caption\" placeholder=\"Image Caption\" value={this.state.caption} onChange={this.handleInput}/>\n        <button type=\"reset\">CANCEL</button>\n        <button type=\"submit\">ADD IMAGE</button>\n      </form>\n    )\n  }\n};\n\n\nfunction ImageList(props) {\n    const urls = props.images.map((image) => (\n       <li key={image.url}>\n        <div>\n        <img src={image.url} alt=\"it's working\"/>\n        <p>{image.caption}</p>\n        </div>\n       </li>\n\n     ));\n\n  return(\n      <ul>{urls}</ul>\n  )\n};\n\n\nclass ImageBoard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [],\n    };\n    this.addPhoto = this.addPhoto.bind(this);\n}\n\naddPhoto(image) {\nconst images = [ ...this.state.images ];\nimages.push(image);\nthis.setState( { images });\n\n}\n\n  render() {\n\n    return (\n      <div>\n        <ImageForm addPhoto={this.addPhoto}/>\n        <ImageList images={this.state.images}/>\n      </div>\n    );\n  }\n}\n\nexport default ImageBoard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport ImageBoard from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}